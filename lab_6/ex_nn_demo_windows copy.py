
import matplotlib.pyplot as plt
import numpy as np
from sklearn.neural_network import MLPRegressor


def get_windows(signal, n):
    n_max = len(signal) - n
    X = np.array([signal[i:i+n] for i in range(n_max)])
    y = signal[n:]
    X_index = np.array([np.arange(len(signal))[i:i+n] for i in range(n_max)])
    y_index = np.arange(len(signal))[n:]
    return X, y, X_index, y_index

signal = np.array([\
    3641.6313, 3654.5249, 3655.2116, 3633.0558, 3622.7714, 3600.1884,
    3562.0109, 3530.4252, 3514.5715, 3508.5595, 3507.4914, 3506.8352,
    3499.465, 3503.585, 3511.6111, 3527.9381, 3542.5865, 3537.9173,
    3517.8215, 3523.3144, 3540.0687, 3568.7705, 3584.243, 3605.1933,
    3635.9397, 3646.3005, 3654.5861, 3651.6563, 3629.1038, 3613.6008,
    3575.6827, 3541.3658, 3511.6111, 3518.2639, 3508.5593, 3517.3637,
    3516.1124, 3540.6334, 3553.1457, 3564.8795, 3560.1341, 3544.0361,
    3506.2859, 3529.7234, 3541.335, 3572.753, 3610.5796, 3636.1686,
    3660.8878, 3665.7403, 3659.1024, 3627.6541, 3596.8926, 3568.0991,
    3544.4632, 3540.5418, 3549.5141, 3540.3435, 3551.9249, 3552.8557,
    3557.8606, 3550.0174, 3559.539, 3554.1678, 3559.0204, 3547.6983,
    3527.5871, 3527.3428, 3554.5494, 3569.1521, 3608.1841, 3638.5186,
    3654.1434, 3662.1543, 3663.8938, 3631.774, 3603.6063, 3564.7882,
    3555.0073, 3553.0539, 3556.3498, 3572.2648, 3571.9138, 3565.1542,
    3569.1978, 3568.0381, 3565.6119, 3544.2192, 3561.187, 3546.9965,
    3524.4285, 3525.6493, 3545.5925, 3571.7155, 3620.8184, 3646.102,
    3676.055, 3686.5532, 3673.4917, 3637.8625, 3605.819, 3578.5973,
    3560.5002, 3551.9401, 3559.5238, 3568.8165, 3574.3249, 3568.2974,
    3566.1767, 3566.4055, 3568.0993, 3572.2649, 3558.4099, 3550.6583,
    3513.9153, 3512.5877, 3541.7471, 3573.8977, 3618.3161, 3651.7172,
    3676.1313, 3681.4263, 3656.4169, 3639.0983, 3606.4902, 3578.6887,
    3557.0519, 3556.289, 3562.6823, 3568.313, 3565.7494, 3569.9761,
    3568.4653, 3581.7559, 3568.8621, 3562.0415, 3567.9772, 3566.314,
    3541.9304, 3545.1958, 3551.8333, 3586.3487, 3623.9922, 3658.8281,
    3677.2301, 3690.4289, 3676.0857, 3646.7431, 3614.9437, 3589.4464,
    3551.2687, 3556.3957, 3561.3853, 3562.8806, 3568.5415, 3562.5909,
    3569.9453, 3563.9032, 3565.856, 3558.2724, 3553.634, 3558.4402,
    3541.5947, 3540.4807, 3554.0305, 3578.3225, 3604.2931, 3637.6486,
    3652.4346, 3666.1371, 3680.8465, 3645.5069, 3632.8576, 3610.2134,
    3569.2438, 3541.61, 3526.3055, 3526.3054, 3515.6395, 3514.6475,
    3511.4283, 3517.9894, 3541.1217, 3535.8421, 3553.3439, 3544.097,
    3520.5377, 3531.9968, 3541.7016, 3566.8633, 3600.4937, 3629.2716,
    3648.1774, 3667.5712, 3666.5487, 3659.9876, 3642.9894, 3618.8346,
    3594.4053, 3555.8006, 3530.0592, 3523.2077, 3519.4848, 3529.2656,
    3531.6764, 3558.1201, 3569.8845, 3579.2534, 3576.6593, 3548.156,
    3534.4995, 3531.1577, 3565.8102, 3597.2129, 3620.0858, 3651.3053,
    3666.3354, 3668.2425, 3670.6991, 3644.2254, 3611.3579, 3578.5209,
    3556.1211, 3552.642, 3556.6397, 3563.6589, 3554.5646, 3564.254,
    3572.2648, 3575.7133, 3562.8349, 3566.2835, 3565.4288, 3552.0166,
    3523.3146, 3531.7222, 3552.9624, 3573.7907, 3620.2842, 3651.4886,
    3664.5346, 3677.9319, 3664.3059, 3639.2509, 3606.7191, 3576.5677,
    3565.2, 3562.1635, 3557.0062, 3567.7635, 3572.0055, 3572.4328,
    3570.3271, 3575.5609, 3559.2186, 3565.2002, 3563.491, 3556.9449,
    3540.2671, 3520.9952, 3556.8382, 3589.1564, 3615.3099, 3651.0154,
    3669.8144, 3673.5223, 3678.9389, 3647.0939, 3616.912, 3580.7487,
    3561.9499, 3564.8948, 3565.9476, 3571.8376, 3584.0752, 3571.9751,
    3583.3427, 3576.3999, 3575.2404, 3566.3748, 3569.9302, 3553.8017,
    3533.5535, 3539.9162, 3543.624, 3589.9192, 3609.5268, 3658.9501,
    3672.4236, 3687.8348, 3679.7325, 3641.9364, 3610.0915, 3595.7022,
    3579.9706, 3574.2637, 3567.4278, 3570.5408, 3568.3585, 3579.7571,
    3574.1874, 3580.108, 3580.7182, 3580.9165, 3579.9705, 3574.1263,
    3552.047, 3550.3684, 3568.3434, 3590.0871, 3622.5424, 3644.1642,
    3669.5243, 3673.1712, 3668.1052, 3639.6629, 3612.7923, 3593.3678,
    3567.9313, 3550.0633, 3552.0927, 3567.6262, 3559.4168, 3561.065,
    3557.6012, 3549.865, 3567.4126, 3577.3919, 3573.3482, 3567.9771,
    3556.4414, 3555.1294, 3568.5112, 3580.3062, 3611.663, 3641.7686,
    3658.6295, 3667.846, 3668.6698, 3646.4378, 3632.2929, 3611.3884,
    3576.2016, 3550.9941, 3532.7293, 3526.3666, 3525.5577, 3529.2045,
    3516.9824, 3535.5065, 3532.2105, 3547.4998, 3551.406, 3554.9767,
    3545.9435, 3548.171, 3564.2387, 3585.9826, 3611.6478, 3633.7882,
    3651.0612, 3665.6486, 3674.8191, 3658.7974, 3645.4918, 3622.2222,
    3589.9193, 3558.7303, 3527.6786, 3516.0818, 3528.8689, 3526.3665,
    3544.1887, 3563.72, 3578.1396, 3590.2856, 3588.5765, 3558.8525,
    3558.5014, 3544.6005, 3569.8234, 3597.8536, 3635.2378, 3662.1848,
    3677.0471, 3690.551, 3686.5225, 3648.986, 3617.019, 3586.3182,
    3570.7694, 3569.503, 3568.5265, 3574.5231, 3580.2148, 3578.0478,
    3578.643, 3585.9366, 3585.1126, 3584.8533, 3579.04, 3571.1206,
    3559.1728, 3548.3393, 3569.6402, 3592.849, 3630.8283, 3660.43,
    3674.4682, 3685.6985, 3667.7695, 3649.1232, 3620.681, 3591.8723,
    3558.3489, 3569.0756, 3555.7091, 3572.1734, 3576.2476, 3577.4529,
    3583.4038, 3578.5667, 3581.5115, 3581.5726, 3575.637, 3566.9243,
    3541.7624, 3548.0948, 3569.3504, 3590.9111, 3630.2178, 3656.9358,
    3674.6057, 3685.958, 3676.2534, 3643.508, 3614.9435, 3583.3581,
    3549.7429, 3555.3582, 3558.5777, 3567.6871, 3565.8715, 3574.3859,
    3564.849, 3580.4893, 3568.5721, 3570.6322, 3577.819, 3565.551,
    3545.6385, 3549.1935, 3568.2518, 3591.8113, 3627.3796, 3655.6694,
    3675.6126, 3690.2765, 3673.6899, 3645.3543, 3616.8511, 3592.4522,
    3559.0964, 3572.921, 3570.7237, 3578.0631, 3581.5728, 3580.7029,
    3578.7651, 3582.6257, 3572.2038, 3576.8119, 3575.4845, 3557.8452,
    3544.7075, 3535.6285, 3565.6425, 3589.6598, 3625.7012, 3649.6116,
    3669.7076, 3673.1102, 3664.5042, 3641.9366, 3613.9365, 3587.0811,
    3562.3314, 3567.7329, 3557.5248, 3572.4938, 3577.3614, 3570.2201,
    3556.0143, 3570.3269, 3564.6659, 3566.7413, 3563.5979, 3553.3744,
    3555.5108, 3549.4224, 3558.3642, 3581.2981, 3606.5362, 3638.5184,
    3649.3675, 3653.2586, 3655.1202, 3644.7288, 3630.2025, 3616.8966,
    3573.6229, 3540.8165, 3524.8863, 3536.3762, 3524.398, 3531.951,
    3531.2948, 3535.0029, 3539.6873, 3542.6627, 3559.7982, 3563.3995,
    3547.6371, 3551.7112, 3558.761, 3585.8148, 3604.0185, 3634.1851,
    3648.4825, 3659.2704, 3663.1309, 3653.0601, 3645.4917, 3630.7975,
    3600.9666, 3562.026, 3535.2621, 3515.7006, 3527.3125, 3525.6644,
    3535.2471, 3565.1085, 3569.7473, 3577.5902, 3575.8505, 3569.0298,
    3543.8683, 3535.7506, 3568.328, 3585.3569, 3615.3557, 3645.034,
    3659.0873, 3665.5113, 3649.4896, 3637.9082, 3609.9236, 3569.274,
    3565.5357, 3562.2854, 3560.1493, 3559.6306, 3569.2588, 3566.1003,
    3560.3478, 3565.9935, 3567.6873, 3570.2203, 3572.8448, 3544.8448,
    3541.7625, 3529.0673, 3555.2972, 3565.6732, 3621.1389, 3646.3461,
    3670.3177, 3669.0972, 3667.907, 3637.7862, 3607.4975, 3572.1123,
    3569.8845, 3556.2735, 3568.679, 3577.2392, 3565.1543, 3571.8224,
    3567.6873, 3577.2239, 3571.6545, 3571.1663, 3573.3483, 3559.7067,
    3536.3302, 3531.2798, 3559.7986, 3578.8109, 3616.256, 3645.1561,
    3667.7391, 3665.0231, 3664.6569, 3642.0282, 3610.6256, 3578.414,
    3561.141, 3567.0159, 3561.6295, 3577.0408, 3574.0805, 3581.0844,
    3474.7459, 3579.6805, 3571.685, 3571.6849, 3575.6369, 3565.3984,
    3551.9859, 3548.1711, 3566.9701, 3583.4342, 3613.4483, 3653.1364,
    3674.1936, 3677.6573, 3663.497, 3648.8946, 3613.2348, 3587.188,
    3579.3449, 3572.8905, 3578.1699, 3581.9999, 3576.6136, 3573.8061,
    3577.8038, 3580.2911, 3583.3733, 3575.4844, 3577.1934, 3569.152,
    3553.9389, 3550.1853, 3566.7564, 3590.4684, 3618.5141, 3652.4498,
    3673.2933, 3674.1935, 3669.0513, 3648.4824, 3624.5109, 3590.3923,
    3580.1232, 3556.8536, 3565.9477, 3572.6768, 3575.7287, 3572.2648,
    3570.3728, 3579.7264, 3571.731, 3571.7156, 3572.4022, 3557.4486,
    3555.0683, 3560.546, 3572.6006, 3591.8419, 3615.0504, 3642.5316,
    3666.4268, 3673.7816, 3670.5008, 3656.7529, 3643.096, 3618.0258,
    3589.3699, 3541.6709, 3533.9041, 3519.7595, 3541.5795, 3539.5653,
    3534.6979, 3547.744, 3544.9822, 3557.4486, 3573.1042, 3573.9281,
    3547.5457, 3556.8076, 3565.0932, 3585.6162, 3613.1124, 3642.9587,
    3657.4394, 3679.2442, 3685.4697, 3680.2512, 3677.703, 3639.9986,
    3611.4342, 3577.4986, 3546.4316, 3529.3265, 3534.2553, 3542.7849,
    3550.872, 3548.3542, 3568.9537, 3579.4058, 3590.1481, 3586.7149,
    3574.157, 3567.4583, 3563.2927, 3585.1128, 3602.5992, 3633.9561,
    3658.8889])

n_training = 40
n_window = 20
np.random.seed(2137)
layers = [1]

X, y, X_index, y_index = get_windows(signal, n=n_window)

i_see = np.random.randint(len(signal))

signal = (signal - np.mean(signal)) / np.std(signal)
X, y, X_index, y_index = get_windows(signal, n=n_window)
print(X.shape)
X_training, y_training = X[:n_training], y[:n_training]
nn = MLPRegressor(hidden_layer_sizes=layers, max_iter=1000)
nn.fit(X_training, y_training)
yn = nn.predict(X)
print(yn)
plt.figure('inspect', figsize=(12, 3))
plt.plot(signal, 'k.-')
plt.plot(X_index[i_see], X[i_see], 'bo')
plt.plot([y_index[i_see]], [yn[i_see]], 'ro')
#plt.xlim(X_index[i_see][0] - 1, y_index[i_see] + 1)
plt.grid()
plt.show()
